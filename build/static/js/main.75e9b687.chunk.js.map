{"version":3,"sources":["img/svg/light-moon.svg","img/svg/dark-moon.svg","img/svg/search.svg","store/index.js","components/navbar/index.jsx","components/countryIncard/index.jsx","components/searchInput/index.jsx","components/wrapper/index.jsx","App.js","index.js"],"names":["module","exports","INITIAL_STATE","theming","darkTheme","elements","input","background","text","lightTheme","store","createStore","state","action","type","countrySearched","searched","Navbar","props","MoonMode","bind","navbarBackground","getState","lightMoon","darkMoon","backgroundColor","id","style","this","className","onClick","setTheme","src","alt","Component","CountryInCards","query","countries","map","country","key","Math","random","flag","name","SearchInput","inputValue","theme","isLoaded","error","changeHandler","submitting","fethingData","e","target","value","setState","fetch","then","res","json","result","status","event","preventDefault","onSubmit","searchIcon","onChange","placeholder","Wrapper","dispatch","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75e9b687.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/light-moon.81146204.svg\";","module.exports = __webpack_public_path__ + \"static/media/dark-moon.131cae57.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.2ea4c436.svg\";","import { createStore } from \"redux\";\n\nconst INITIAL_STATE = {\n    theming: \"light-theme\",\n    darkTheme: {\n            elements: \"hsl(209, 23%, 22%)\",\n            input: \"hsl(0, 0%, 100%)\",\n            background: \"hsl(207, 26%, 17%)\",\n            text: \"hsl(0, 0%, 100%)\",\n        },\n    lightTheme: {\n        elements: \"hsl(0, 0%, 100%)\",\n        input: \"hsl(0, 0%, 52%)\",\n        background: \"hsl(0, 0%, 98%)\",\n        text: \"hsl(200, 15%, 8%)\"\n    }\n};\n\n\nfunction themeReducer(state = INITIAL_STATE, action) {\n    switch(action.type) {\n        case \"THEME_MODE\":\n            if(state.theming === \"light-theme\") {\n                return {...state, theming: \"dark-theme\"};\n            } else {\n                return  {...state, theming: \"light-theme\"};\n            }\n        case \"COUNTRY_SEARCHED\":\n            return  {...state, countrySearched: action.searched};\n        default:\n            return state;\n    }\n\n}\n\nconst store = createStore(themeReducer);\n\nexport default store;\n","import React, { Component } from 'react';\nimport \"./style.css\";\nimport lightMoon from \"../../img/svg/light-moon.svg\";\nimport darkMoon from \"../../img/svg/dark-moon.svg\";\nimport store from \"../../store/index\";\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            theming: \"\"\n        };\n\n        this.MoonMode = this.MoonMode.bind(this);\n        this.navbarBackground = this.navbarBackground.bind(this)\n    }\n            \n    MoonMode() {\n        if(store.getState().theming === \"light-theme\") {\n            return lightMoon\n        } else {\n            return darkMoon\n        }\n    }\n\n    navbarBackground() {\n        if(store.getState().theming === \"light-theme\") {\n            return {backgroundColor: store.getState().lightTheme.elements}\n        } else {\n            return {backgroundColor: store.getState().darkTheme.elements}\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"navbar\" style={this.navbarBackground()}>\n                <ul>\n                    <li className=\"title\">Where in the world?</li>\n                    <li onClick={this.props.setTheme} className=\"light-toggle\"><img className={\"moon-icon\"} src={this.MoonMode()} alt={\"moon\"} />Dark Mode</li>\n                </ul>\n            </div>\n        );\n    }\n}\n\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport \"./style.css\"\n\nclass CountryInCards extends Component {\n    render() {\n        return (\n            <div className=\"cards\">\n                {this.props.query.countries.map( country => {\n                    return (\n                        <div className=\"card\" key={Math.random() * 1.3}>\n                            <img className={\"flags\"} key={Math.random() * 1.3} src={country.flag} alt={\"flag\"}></img>\n                            <h1 className={\"country-name\"} key={Math.random() * 1.3}>{country.name}</h1>\n                        </div>\n                    )\n                })} \n            </div>\n        )\n    }\n}\n\nexport default CountryInCards;","import React, { Component } from 'react';\nimport searchIcon from '../../img/svg/search.svg';\nimport store from \"../../store\";\nimport \"./style.css\";\nimport CountryInCards from '../countryIncard';\n\nclass SearchInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputValue: \"region/oceania\",\n            theme: \"light-theme\",\n            countries: [],\n            isLoaded: false,\n            error: null\n        }\n        this.changeHandler = this.changeHandler.bind(this);\n        this.submitting = this.submitting.bind(this);\n        this.theming = this.theming.bind(this);\n        this.fethingData = this.fethingData.bind(this)\n    }\n\n    changeHandler(e) {\n        if(e.target.value === \"\") {\n            this.setState({\n                inputValue: `region/americas`\n            })    \n        } else {\n            this.setState({\n                inputValue: `name/${e.target.value}`\n            })\n        }\n        \n    }\n    \n    \n    fethingData() {\n        fetch(`https://restcountries.eu/rest/v2/${this.state.inputValue}`)\n        .then(res => res.json())\n        .then(\n            (result) => {\n                if(result.status) {\n                    this.setState({\n                        isLoaded: true,\n                        countries: [{name: `No country found, check your spelling and try again :)`}]\n                    });\n                } else {\n                    this.setState({\n                        isLoaded: true,\n                        countries: result\n                    });    \n                }\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }\n            )\n        }\n        \n    componentDidMount() {\n        this.fethingData();\n    }\n\n    submitting(event) {\n        this.fethingData();\n        event.preventDefault();\n    }\n    \n    theming() {\n        if(store.getState().theming === \"light-theme\"){\n            return \"light-theme\"\n        } else {\n            return \"dark-theme\" \n        }\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.submitting}>\n                    <div className={\"outerInput\"}>\n                        <img onClick={this.submitting} className={\"searchIcon\"} src={searchIcon} alt={\"search-icon\"}></img>\n                        <input onChange={this.changeHandler} type={\"text\"} className={`searchInput ${this.theming()}`} placeholder={\"Search for a country...\"}></input>\n                    </div>\n                    <CountryInCards query={this.state} />\n            </form>    \n        )\n    }\n}\n\nexport default SearchInput;","import React, { Component } from 'react';\nimport Navbar from \"../navbar\";\nimport SearchInput from \"../searchInput\";\nimport \"./style.css\";\nimport store from \"../../store\";\n\nclass Wrapper extends Component {\n    constructor(props) {\n        super(props);        \n        this.state = {\n            theming: \"light-theme\"\n        }\n        this.setTheme = this.setTheme.bind(this);\n    }\n    \n    setTheme() {\n        store.dispatch({type: \"THEME_MODE\"});\n        this.setState({\n            theming: store.getState().theming\n        })\n    }\n    render() {\n        return (\n            <div id=\"wrapper\" className={this.state.theming}>\n                <Navbar setTheme={this.setTheme} />\n                <SearchInput />\n            </div>\n        );\n    }\n}\n\nexport default Wrapper;\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport Wrapper from \"./components/wrapper/index\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Wrapper />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}