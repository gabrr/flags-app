{"version":3,"sources":["img/svg/light-moon.svg","img/svg/dark-moon.svg","img/svg/search.svg","store/index.js","components/navbar/index.jsx","components/searchInput/index.jsx","components/wrapper/index.jsx","App.js","index.js"],"names":["module","exports","INITIAL_STATE","theming","darkTheme","elements","input","background","text","lightTheme","store","createStore","state","type","Navbar","props","MoonMode","bind","navbarBackground","getState","lightMoon","darkMoon","backgroundColor","id","style","this","className","onClick","setTheme","src","alt","Component","SearchInput","inputValue","countrySearched","theme","changeHandler","submitting","e","setState","target","value","key","searchIcon","onKeyPress","onChange","placeholder","Wrapper","dispatch","App","ReactDOM","render","document","getElementById"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,w2BCE3C,IAAMC,EAAgB,CAClBC,QAAS,cACTC,UAAW,CACHC,SAAU,qBACVC,MAAO,mBACPC,WAAY,qBACZC,KAAM,oBAEdC,WAAY,CACRJ,SAAU,mBACVC,MAAO,kBACPC,WAAY,kBACZC,KAAM,sBAad,IAEeE,EAFDC,aARd,WAAsD,IAAhCC,EAA+B,uDAAvBV,EAC1B,MAAmB,gBAD8B,wCACvCW,MAA2C,gBAAlBD,EAAMT,QAC9B,EAAP,GAAWS,EAAX,CAAkBT,QAAS,eAExB,EAAP,GAAYS,EAAZ,CAAmBT,QAAS,mBCuBjBW,E,YAvCX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDH,MAAQ,CACTT,QAAS,IAGb,EAAKa,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBAPT,E,wEAWf,MAAgC,gBAA7BP,EAAMS,WAAWhB,QACTiB,IAEAC,M,yCAKX,MAAgC,gBAA7BX,EAAMS,WAAWhB,QACT,CAACmB,gBAAiBZ,EAAMS,WAAWV,WAAWJ,UAE9C,CAACiB,gBAAiBZ,EAAMS,WAAWf,UAAUC,Y,+BAKxD,OACI,yBAAKkB,GAAG,SAASC,MAAOC,KAAKP,oBACzB,4BACI,wBAAIQ,UAAU,SAAd,uBACA,wBAAIC,QAASF,KAAKV,MAAMa,SAAUF,UAAU,gBAAe,yBAAKA,UAAW,YAAaG,IAAKJ,KAAKT,WAAYc,IAAK,SAAnH,mB,GAhCCC,a,iBCoDNC,G,kBApDX,WAAYjB,GAAQ,IAAD,8BACf,4CAAMA,KACDH,MAAQ,CACTqB,WAAY,GACZC,gBAAiB,GACjBC,MAAO,eAEX,EAAKC,cAAgB,EAAKA,cAAcnB,KAAnB,gBACrB,EAAKoB,WAAa,EAAKA,WAAWpB,KAAhB,gBAClB,EAAKd,QAAU,EAAKA,QAAQc,KAAb,gBATA,E,2EAYLqB,GACVb,KAAKc,SAAS,CACVN,WAAYK,EAAEE,OAAOC,U,iCAIlBH,GACM,UAAVA,EAAEI,KACDjB,KAAKc,SAAS,CACVL,gBAAiBT,KAAKb,MAAMqB,e,gCAMpC,MAAgC,gBAA7BvB,EAAMS,WAAWhB,QACT,cAEA,e,+BAaX,OACI,yBAAKuB,UAAW,cACZ,yBAAKA,UAAW,aAAcG,IAAKc,IAAYb,IAAK,gBACpD,2BAAOc,WAAYnB,KAAKY,WAAYQ,SAAUpB,KAAKW,cAAevB,KAAM,OAAQa,UAAS,sBAAiBD,KAAKtB,WAAa2C,YAAa,iC,GA/C/Hf,cC2BXgB,G,kBAxBX,WAAYhC,GAAQ,IAAD,8BACf,4CAAMA,KACDH,MAAQ,CACTT,QAAS,eAEb,EAAKyB,SAAW,EAAKA,SAASX,KAAd,gBALD,E,wEASfP,EAAMsC,SAAS,CAACnC,KAAM,eACtBY,KAAKc,SAAS,CACVpC,QAASO,EAAMS,WAAWhB,Y,+BAI9B,OACI,yBAAKoB,GAAG,UAAUG,UAAWD,KAAKb,MAAMT,SACpC,kBAAC,EAAD,CAAQyB,SAAUH,KAAKG,WACvB,kBAAC,EAAD,W,GAnBMG,cCQPkB,MAVf,WACE,OACE,kBAAC,IAAD,CAAUvC,MAAOA,GACf,yBAAKgB,UAAU,OACb,kBAAC,EAAD,S,MCJRwB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a5ba56a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/light-moon.81146204.svg\";","module.exports = __webpack_public_path__ + \"static/media/dark-moon.131cae57.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.2ea4c436.svg\";","import { createStore } from \"redux\";\n\nconst INITIAL_STATE = {\n    theming: \"light-theme\",\n    darkTheme: {\n            elements: \"hsl(209, 23%, 22%)\",\n            input: \"hsl(0, 0%, 100%)\",\n            background: \"hsl(207, 26%, 17%)\",\n            text: \"hsl(0, 0%, 100%)\",\n        },\n    lightTheme: {\n        elements: \"hsl(0, 0%, 100%)\",\n        input: \"hsl(0, 0%, 52%)\",\n        background: \"hsl(0, 0%, 98%)\",\n        text: \"hsl(200, 15%, 8%)\"\n    }\n};\n\n\nfunction themeReducer(state = INITIAL_STATE, action) {\n    if(action.type === \"THEME_MODE\" && state.theming === \"light-theme\") {\n        return {...state, theming: \"dark-theme\"};\n    } \n    return  {...state, theming: \"light-theme\"};\n\n}\n\nconst store = createStore(themeReducer);\n\nexport default store;\n","import React, { Component } from 'react';\nimport \"./style.css\";\nimport lightMoon from \"../../img/svg/light-moon.svg\";\nimport darkMoon from \"../../img/svg/dark-moon.svg\";\nimport store from \"../../store/index\";\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            theming: \"\"\n        };\n\n        this.MoonMode = this.MoonMode.bind(this);\n        this.navbarBackground = this.navbarBackground.bind(this)\n    }\n            \n    MoonMode() {\n        if(store.getState().theming === \"light-theme\") {\n            return lightMoon\n        } else {\n            return darkMoon\n        }\n    }\n\n    navbarBackground() {\n        if(store.getState().theming === \"light-theme\") {\n            return {backgroundColor: store.getState().lightTheme.elements}\n        } else {\n            return {backgroundColor: store.getState().darkTheme.elements}\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"navbar\" style={this.navbarBackground()}>\n                <ul>\n                    <li className=\"title\">Where in the world?</li>\n                    <li onClick={this.props.setTheme} className=\"light-toggle\"><img className={\"moon-icon\"} src={this.MoonMode()} alt={\"moon\"} />Dark Mode</li>\n                </ul>\n            </div>\n        );\n    }\n}\n\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport searchIcon from '../../img/svg/search.svg';\nimport store from \"../../store\";\nimport \"./style.css\";\n\nclass SearchInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputValue: \"\",\n            countrySearched: \"\",\n            theme: \"light-theme\"\n        }\n        this.changeHandler = this.changeHandler.bind(this);\n        this.submitting = this.submitting.bind(this);\n        this.theming = this.theming.bind(this);\n    }\n\n    changeHandler(e) {\n        this.setState({\n            inputValue: e.target.value\n        })\n    }\n\n    submitting(e) {\n        if(e.key === \"Enter\") {\n            this.setState({\n                countrySearched: this.state.inputValue\n            })\n        } \n    }\n\n    theming() {\n        if(store.getState().theming === \"light-theme\"){\n            return \"light-theme\"\n        } else {\n            return \"dark-theme\" \n        }\n    }\n\n    // navbarBackground() {\n    //     if(store.getState().theming === ) {\n    //         return {backgroundColor: store.getState().lightTheme.elements}\n    //     } else {\n    //         return {backgroundColor: store.getState().darkTheme.elements}\n    //     }\n    // }\n\n    render() {\n        return (\n            <div className={\"outerInput\"}>\n                <img className={\"searchIcon\"} src={searchIcon} alt={\"search-icon\"}></img>\n                <input onKeyPress={this.submitting} onChange={this.changeHandler} type={\"text\"} className={`searchInput ${this.theming()}`} placeholder={\"Search for a country...\"}></input>\n            </div>\n        )\n    }\n}\n\nexport default SearchInput;","import React, { Component } from 'react';\nimport Navbar from \"../navbar\";\nimport SearchInput from \"../searchInput\";\nimport \"./style.css\";\nimport store from \"../../store\";\n\n\nclass Wrapper extends Component {\n    constructor(props) {\n        super(props);        \n        this.state = {\n            theming: \"light-theme\"\n        }\n        this.setTheme = this.setTheme.bind(this);\n    }\n    \n    setTheme() {\n        store.dispatch({type: \"THEME_MODE\"});\n        this.setState({\n            theming: store.getState().theming\n        })\n    }\n    render() {\n        return (\n            <div id=\"wrapper\" className={this.state.theming}>\n                <Navbar setTheme={this.setTheme} />\n                <SearchInput />\n            </div>\n        );\n    }\n}\n\nexport default Wrapper;\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport Wrapper from \"./components/wrapper/index\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Wrapper />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}